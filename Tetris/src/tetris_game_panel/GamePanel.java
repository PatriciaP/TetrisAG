/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tetris_game_panel;

import java.awt.Dimension;
import java.util.Random;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import tetris_board.BoardTetris;
import tetris_piece.PieceTetris;
import tetris_piece.PieceTranslation;
import tetris_piece.Point;

/**
 *
 * @author Patricia Pieroni
 */
public class GamePanel extends javax.swing.JPanel implements Runnable {

    public static BoardTetris board;
    public static int blocksize;
    public static PieceTetris fallingpiece;
    public static boolean gameover;
    public static Random random;
    public static ScheduledThreadPoolExecutor animator;
    public static int cols;
    public static int rows;
    static long delayToStart;
    static long step;

    /**
     * Creates new form GamePanel
     */
    public GamePanel() {
        initComponents();
    }

    /**
     * Semea o gerador aleatório, para que a sequência de peças nao fique
     * repetindo.
     *
     * @param blocksize
     * @param cols
     * @param rows
     * @param seed
     */
    public GamePanel(int blocksize, int cols, int rows, int seed) {
        this(rows, cols, blocksize);
        random = new Random(seed);
    }

    /**
     * Recebe o número de linhas, colunas e o tamanho de cada bloco, inicializa
     * algumas variáveis e habilita input do teclado.
     *
     * @param rows
     * @param cols
     * @param blocksize
     */
    public GamePanel(int rows, int cols, int blocksize) {
        this.blocksize = blocksize;
        this.setPreferredSize(new Dimension(cols * blocksize, rows * blocksize));
        setDoubleBuffered(true);
        random = new Random();
        board = new BoardTetris(rows, cols);
        this.cols = cols;
        this.rows = rows;

        setFocusable(true);
        requestFocus();
        GamePanelInput.inputKey();

    }

    /*variáveis board, fallingPiece e gameOver mantem o estado atual do game,
    e são resetadas neste metodo*/
    public void startNewGame() {
        gameover = false;
        BoardTetris.resetBoard();
        fallingpiece = randomPiece();

        delayToStart = 100L;
        step = 1000L / 4;

        animator = null;
        animator = new ScheduledThreadPoolExecutor(1);
        animator.scheduleAtFixedRate(this, delayToStart, step, TimeUnit.MILLISECONDS);
    }

    private PieceTetris randomPiece() {
        int type = random.nextInt(7);
        int rot = random.nextInt(4);

        PieceTetris piece = new PieceTetris();
        piece.blocksize = GamePanel.blocksize;
        piece.type = type;
        piece.rotation = rot;

        int x = blocksize * (cols / 2 + PieceTranslation.TRANSLATIONS[type][rot][0]);
        int y = blocksize * PieceTranslation.TRANSLATIONS[type][rot][1];

        piece.position = new Point(x, y);

        return piece;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void run() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
